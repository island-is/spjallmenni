[{"id":"fec1579.60bafa8","type":"tab","label":"Multi-Assist Pre Webhook","disabled":false,"info":""},{"id":"7e8e1015.4da01","type":"tab","label":"Multi-Assist Post Webhook","disabled":false,"info":""},{"id":"11294484c4fb6ebd","type":"tab","label":"Feedback","disabled":false,"info":"","env":[]},{"id":"ea9c4009.0c847","type":"http in","z":"fec1579.60bafa8","name":"","url":"/multi-assist-pre-webhook","method":"post","upload":false,"swaggerDoc":"","x":210,"y":300,"wires":[["537d7087.40ce6","552ce939.019d58"]]},{"id":"a39fcdf5.b2c3f","type":"http response","z":"fec1579.60bafa8","name":"","statusCode":"","headers":{},"x":1090,"y":620,"wires":[]},{"id":"537d7087.40ce6","type":"debug","z":"fec1579.60bafa8","name":"Pre Webhook Inbound Request","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":550,"y":200,"wires":[]},{"id":"552ce939.019d58","type":"function","z":"fec1579.60bafa8","name":"Pre Request router","func":"if (typeof msg.payload.payload.context.skills === 'undefined' ||\n    typeof msg.payload.payload.context.skills[\"main skill\"] === 'undefined' ||\n    typeof msg.payload.payload.context.skills[\"main skill\"].user_defined === 'undefined' ||\n    typeof msg.payload.payload.context.skills[\"main skill\"].user_defined.multi_assist_session_id === 'undefined' ||\n     msg.payload.payload.context.skills[\"main skill\"].user_defined.multi_assist_session_id === null){\n    //  If there is no multi-skill session ID this request should be routed to the primary assistant. This is a no-op.\n    \n    // bthj - create a context to hold the original input text, to pass in from the session create code in the post-webhook:\n    msg.payload.payload.context = {};\n    msg.payload.payload.context.skills = {\"main skill\" : {}};\n    msg.payload.payload.context.skills[\"main skill\"].user_defined = {};\n    msg.payload.payload.context.skills[\"main skill\"].user_defined.orig_pre_request_payload_input = msg.payload.payload.input;\n    \n    return [null, msg];\n}\nelse{\n    node.warn (\"Forward request to subskill\");\n\n    //  Save the original payload here so that it can be accessed after the sub skill responds.\n    context.flow.orig_payload = msg.payload.payload;\n\n    node.warn(\"msg.payload\");\n    node.warn(msg.payload);\n\n    //  Route the request to the appropriate sub skill\n    msg.url =  msg.payload.payload.context.skills[\"main skill\"].user_defined.multi_assist_url + \"/\" + msg.payload.payload.context.skills[\"main skill\"].user_defined.multi_assist_session_id + \"/message?version=2020-09-24\";\n    msg.payload = msg.payload.payload;\n \n    return [msg, null];\n}","outputs":2,"noerr":0,"initialize":"","finalize":"","libs":[],"x":530,"y":480,"wires":[["7bf9ce3f.f7123"],["a39fcdf5.b2c3f"]]},{"id":"7bf9ce3f.f7123","type":"http request","z":"fec1579.60bafa8","name":"Pre Sub Message Request","method":"POST","ret":"obj","paytoqs":"ignore","url":"","tls":"","persist":false,"proxy":"","authType":"basic","senderr":false,"x":820,"y":340,"wires":[["21f7c30d.aebe4c","d9baf37e.01baa"]]},{"id":"d9baf37e.01baa","type":"debug","z":"fec1579.60bafa8","name":"Sub Skill Response","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","x":1030,"y":240,"wires":[]},{"id":"21f7c30d.aebe4c","type":"function","z":"fec1579.60bafa8","name":"Pre Sub Message Response processor","func":"\nif (typeof msg.payload.context.skills[\"main skill\"].user_defined.multi_assist_no_match === 'undefined'){\n    node.warn (\"Request handled by subskill\");\n    \n    //  In this case the sub skill is still active so simply return the state in the response only with all the context.\n    msg.headers = {\"X-Watson-Assistant-Webhook-Return\" : true};\n    \n    //  Set the session ID in the response back to the original session ID\n    msg.payload.context.global.session_id = msg.payload.context.skills[\"main skill\"].user_defined.multi_assist_orig_session_id;\n    \n    \n    //  If there is no multi-skill session ID this request should be routed to the primary assistant. This is a no-op.\n    return msg;\n}\nelse{\n    //  In this case the sub skill does not find an intent match so the request should be routed to the primary assistant.\n    \n    node.warn (\"No intent found. Switch back to primary skill.\");\n\n    //  First, save the user_defined context returned from the sub skill.\n    context.flow.orig_payload.context.skills[\"main skill\"].user_defined = msg.payload.context.skills[\"main skill\"].user_defined;\n    \n    //  Clear the state to start over at the primary skill.\n    context.flow.orig_payload.context.skills[\"main skill\"].system = {};\n    \n    //  Here we clear the previous multi-skill state from user_defined since we are back to the top.\n    context.flow.orig_payload.context.skills[\"main skill\"].user_defined.multi_assist_no_match = null;\n    context.flow.orig_payload.context.skills[\"main skill\"].user_defined.multi_assist_url = null;\n    context.flow.orig_payload.context.skills[\"main skill\"].user_defined.multi_assist_session_id = null;\n    \n    msg.payload = {};\n    msg.payload.payload = context.flow.orig_payload;\n    \n    return msg;\n}\n","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1060,"y":460,"wires":[["a39fcdf5.b2c3f","a0296126.d78a2"]]},{"id":"a0296126.d78a2","type":"debug","z":"fec1579.60bafa8","name":"Final Prehook Response","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","x":1390,"y":320,"wires":[]},{"id":"7edbaf65.fb9fc","type":"http in","z":"7e8e1015.4da01","name":"","url":"/multi-assist-post-webhook","method":"post","upload":false,"swaggerDoc":"","x":300,"y":320,"wires":[["80b737b4.93ebe8","70d0b5a8.9197cc"]]},{"id":"2466e415.7e0b7c","type":"http response","z":"7e8e1015.4da01","name":"","statusCode":"","headers":{},"x":1350,"y":780,"wires":[]},{"id":"80b737b4.93ebe8","type":"debug","z":"7e8e1015.4da01","name":"Inbound Posthook Response","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":560,"y":140,"wires":[]},{"id":"70d0b5a8.9197cc","type":"function","z":"7e8e1015.4da01","name":"Post Response Router","func":"//  The first turn on this session should get back the original session ID so save it here in context for all future needs.\nif (\n    typeof msg.payload.payload.context.skills[\"main skill\"].user_defined === 'undefined' ||\n    typeof msg.payload.payload.context.skills[\"main skill\"].user_defined.multi_assist_orig_session_id === 'undefined'\n){\n    node.warn (\"Saving original session ID: \" + msg.payload.payload.context.global.session_id);\n    \n    // typeof by bthj\n    if (typeof msg.payload.payload.context.skills[\"main skill\"].user_defined === 'undefined')\n        msg.payload.payload.context.skills[\"main skill\"].user_defined = {};\n    \n    node.warn(typeof msg.payload.payload.context.skills[\"main skill\"].user_defined);\n    \n    context.flow.original_session_id = msg.payload.payload.context.global.session_id; \n    msg.payload.payload.context.skills[\"main skill\"].user_defined.multi_assist_orig_session_id = msg.payload.payload.context.global.session_id;\n}\n\nif ((typeof msg.payload.payload.context.skills[\"main skill\"].user_defined.multi_assist_session_id === 'undefined' || \n     msg.payload.payload.context.skills[\"main skill\"].user_defined.multi_assist_session_id === null) &&\n    typeof msg.payload.payload.context.skills[\"main skill\"].user_defined.multi_assist_url !== 'undefined' && \n    msg.payload.payload.context.skills[\"main skill\"].user_defined.multi_assist_url !== null){\n        \n    //  In this case we received a directive from the primary skill to route to a sub skill so set up to create a session.\n    node.warn (\"Creating a new session at this URL: \" + msg.payload.payload.context.skills[\"main skill\"].user_defined.multi_assist_url);\n\n    //  Save the original payload so that it can be passed into the msg request API.\n    context.flow.orig_payload = msg.payload.payload;\n    context.flow.base_url = msg.payload.payload.context.skills[\"main skill\"].user_defined.multi_assist_url;\n    \n    //bthj:\n    context.flow.orig_pre_request_payload_input = msg.payload.payload.context.skills[\"main skill\"].user_defined.orig_pre_request_payload_input;\n\n    msg.url =  msg.payload.payload.context.skills[\"main skill\"].user_defined.multi_assist_url + \"/\" + \"?version=2020-09-24\";\n\n    //  No payload is needed when creating a new session.\n    msg.payload = {};\n    \n    return [msg, null];\n}\nelse{\n    //  In this case there is nothing to do so just return the response as is. It's basically a no op.\n    node.warn (\"Post process no switch. Return with no changes.\");\n    return [null, msg];\n}","outputs":2,"noerr":0,"initialize":"","finalize":"","libs":[],"x":500,"y":560,"wires":[["49ab7431.de2ddc"],["2466e415.7e0b7c"]]},{"id":"21e805a3.fe171a","type":"http request","z":"7e8e1015.4da01","name":"Sub Message Request","method":"POST","ret":"obj","paytoqs":"ignore","url":"","tls":"","persist":false,"proxy":"","authType":"basic","senderr":false,"x":1020,"y":500,"wires":[["1c532280.ee2aad","b98c5868.efd198"]]},{"id":"49ab7431.de2ddc","type":"http request","z":"7e8e1015.4da01","name":"Sub Session Create","method":"POST","ret":"obj","paytoqs":"ignore","url":"","tls":"","persist":false,"proxy":"","authType":"basic","senderr":false,"x":720,"y":340,"wires":[["5aca5065.b7613","3c7326fc.4e757a"]]},{"id":"5aca5065.b7613","type":"function","z":"7e8e1015.4da01","name":"Post Session Create Processor","func":"\n//  If no session_id exist yet for the inbound session ID create a new session.\nif (typeof msg.payload.session_id !== \"undefined\"){\n    context.flow.sub_session_id = msg.payload.session_id;\n    \n    node.warn(\"Sub Skill Session Created Session ID = \" + context.flow.sub_session_id);\n\n    msg.url =  context.flow.base_url + \"/\" + context.flow.sub_session_id + \"/message?version=2020-09-24\";\n    \n    // msg.payload = {\"input\":{\"text\":\"\"}};\n    // bthj - pass the original input text, from the initial message request:\n    msg.payload = {\"input\":{\"text\":context.flow.orig_pre_request_payload_input.text}};\n    msg.payload.input.options = {\"return_context\":true};\n\n    //  Save context needed to manage multi-skill state\n    msg.payload.context = {};\n    msg.payload.context.skills = {\"main skill\" : {}};\n    msg.payload.context.skills[\"main skill\"].user_defined = {};\n    msg.payload.context.skills[\"main skill\"].user_defined.multi_assist_url = context.flow.orig_payload.context.skills[\"main skill\"].user_defined.multi_assist_url;\n    msg.payload.context.skills[\"main skill\"].user_defined.multi_assist_session_id = context.flow.sub_session_id;\n    \n    //  Save the original user_id\n    msg.payload.user_id = context.flow.orig_payload.user_id;\n\n    node.warn(\"Process Session Create: send message request to this URL = \" + msg.url);\n}\nelse{\n    node.warn(\"Session Create Failed\");\n}\n\nreturn msg;\n\n\n","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":930,"y":400,"wires":[["21e805a3.fe171a","67781348.7a281c"]]},{"id":"1b7c2211.1ea39e","type":"debug","z":"7e8e1015.4da01","name":"Final Response","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","x":1380,"y":480,"wires":[]},{"id":"3c7326fc.4e757a","type":"debug","z":"7e8e1015.4da01","name":"Session Create Result","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","x":940,"y":220,"wires":[]},{"id":"1c532280.ee2aad","type":"function","z":"7e8e1015.4da01","name":"Post Message Response Processor","func":"var payload = msg.payload;\n\nmsg.payload = {};\n\npayload.context.global.session_id = context.flow.original_session_id;\n\nmsg.payload.payload = payload;\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1200,"y":600,"wires":[["2466e415.7e0b7c","1b7c2211.1ea39e"]]},{"id":"b98c5868.efd198","type":"debug","z":"7e8e1015.4da01","name":"Sub Skill Message Response","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","x":1300,"y":360,"wires":[]},{"id":"67781348.7a281c","type":"debug","z":"7e8e1015.4da01","name":"Sub Skill Message Request","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","x":1220,"y":280,"wires":[]},{"id":"47727249d403cf10","type":"http in","z":"11294484c4fb6ebd","name":"Feedback reception endpoint","url":"/feedback","method":"post","upload":false,"swaggerDoc":"","x":213,"y":144,"wires":[["347f6d684996f4e5","02a3c989a774fe83"]],"icon":"node-red/comment.svg"},{"id":"347f6d684996f4e5","type":"debug","z":"11294484c4fb6ebd","name":"Feedback request","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":532,"y":91,"wires":[]},{"id":"02a3c989a774fe83","type":"http response","z":"11294484c4fb6ebd","name":"","statusCode":"","headers":{"Access-Control-Allow-Origin":"*"},"x":603,"y":245,"wires":[]}]
